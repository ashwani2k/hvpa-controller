
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: hvpas.autoscaling.k8s.io
spec:
  group: autoscaling.k8s.io
  names:
    kind: Hvpa
    plural: hvpas
  scope: ""
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Hvpa is the Schema for the hvpas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HvpaSpec defines the desired state of Hvpa
            properties:
              hpaTemplate:
                description: HpaTemplate defines the spec of HPA
                properties:
                  maxReplicas:
                    description: maxReplicas is the upper limit for the number of
                      replicas to which the autoscaler can scale up. It cannot be
                      less that minReplicas.
                    format: int32
                    type: integer
                  metrics:
                    description: metrics contains the specifications for which to
                      use to calculate the desired replica count (the maximum replica
                      count across all metrics will be used).  The desired replica
                      count is calculated multiplying the ratio between the target
                      value and the current value by the current number of pods.  Ergo,
                      metrics used must decrease as the pod count is increased, and
                      vice-versa.  See the individual metric source types for more
                      information about how each type of metric must respond. If not
                      set, the default metric will be set to 80% average CPU utilization.
                    items:
                      description: MetricSpec specifies how to scale based on a single
                        metric (only `type` and one other matching field should be
                        set at once).
                      properties:
                        external:
                          description: external refers to a global metric that is
                            not associated with any Kubernetes object. It allows autoscaling
                            based on information coming from components running outside
                            of cluster (for example length of queue in cloud messaging
                            service, or QPS from loadbalancer running outside of cluster).
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        object:
                          description: object refers to a metric describing a single
                            kubernetes object (for example, hits-per-second on an
                            Ingress object).
                          properties:
                            describedObject:
                              description: CrossVersionObjectReference contains enough
                                information to let you identify the referred resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent
                                  type: string
                                kind:
                                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                                  type: string
                                name:
                                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - describedObject
                          - metric
                          - target
                          type: object
                        pods:
                          description: pods refers to a metric describing each pod
                            in the current scale target (for example, transactions-processed-per-second).  The
                            values will be averaged together before being compared
                            to the target value.
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        resource:
                          description: resource refers to a resource metric (such
                            as those specified in requests and limits) known to Kubernetes
                            describing each pod in the current scale target (e.g.
                            CPU or memory). Such metrics are built in to Kubernetes,
                            and have special scaling options on top of those available
                            to normal per-pod metrics using the "pods" source.
                          properties:
                            name:
                              description: name is the name of the resource in question.
                              type: string
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - name
                          - target
                          type: object
                        type:
                          description: type is the type of metric source.  It should
                            be one of "Object", "Pods" or "Resource", each mapping
                            to a matching field in the object.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  minReplicas:
                    description: minReplicas is the lower limit for the number of
                      replicas to which the autoscaler can scale down. It defaults
                      to 1 pod.
                    format: int32
                    type: integer
                required:
                - maxReplicas
                type: object
              scaleDownStabilization:
                description: ScaleDownStabilization defines stabilization parameters
                  after last scaling
                properties:
                  duration:
                    description: Duration defines the minimum delay in minutes between
                      2 consecutive scale operations Valid time units are "ns", "us"
                      (or "µs"), "ms", "s", "m", "h"
                    type: string
                  minCpuChange:
                    description: MinCpuChange is the minimum change in CPU on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                  minMemChange:
                    description: MinMemChange is the minimum change in memory on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                type: object
              scaleUpStabilization:
                description: ScaleUpStabilization defines stabilization parameters
                  after last scaling
                properties:
                  duration:
                    description: Duration defines the minimum delay in minutes between
                      2 consecutive scale operations Valid time units are "ns", "us"
                      (or "µs"), "ms", "s", "m", "h"
                    type: string
                  minCpuChange:
                    description: MinCpuChange is the minimum change in CPU on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                  minMemChange:
                    description: MinMemChange is the minimum change in memory on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                type: object
              targetRef:
                description: TargetRef points to the controller managing the set of
                  pods for the autoscaler to control
                properties:
                  apiVersion:
                    description: API version of the referent
                    type: string
                  kind:
                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - kind
                - name
                type: object
              vpaTemplate:
                description: VpaTemplate defines the spec of VPA
                properties:
                  resourcePolicy:
                    description: Controls how the autoscaler computes recommended
                      resources. The resource policy may be used to set constraints
                      on the recommendations for individual containers. If not specified,
                      the autoscaler computes recommended resources for all containers
                      in the pod, without additional constraints.
                    properties:
                      containerPolicies:
                        description: Per-container resource policies.
                        items:
                          description: ContainerResourcePolicy controls how autoscaler
                            computes the recommended resources for a specific container.
                          properties:
                            containerName:
                              description: Name of the container or DefaultContainerResourcePolicy,
                                in which case the policy is used by the containers
                                that don't have their own policy specified.
                              type: string
                            maxAllowed:
                              additionalProperties:
                                type: string
                              description: Specifies the maximum amount of resources
                                that will be recommended for the container. The default
                                is no maximum.
                              type: object
                            minAllowed:
                              additionalProperties:
                                type: string
                              description: Specifies the minimal amount of resources
                                that will be recommended for the container. The default
                                is no minimum.
                              type: object
                            mode:
                              description: Whether autoscaler is enabled for the container.
                                The default is "Auto".
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              weightBasedScalingIntervals:
                description: WeightBasedScalingIntervals defines the intervals of
                  replica counts, and the weights for scaling a deployment vertically
                  If there are overlapping intervals, then the vpaWeight will be taken
                  from the first matching interval
                items:
                  description: WeightBasedScalingInterval defines the interval of
                    replica counts in which VpaWeight is applied to VPA scaling
                  properties:
                    lastReplicaCount:
                      description: LastReplicaCount is the number of replicas till
                        which VpaWeight is applied to VPA scaling If this field is
                        not provided, it will default to maxReplicas of HPA
                      format: int32
                      type: integer
                    startReplicaCount:
                      description: StartReplicaCount is the number of replicas from
                        which VpaWeight is applied to VPA scaling If this field is
                        not provided, it will default to minReplicas of HPA
                      format: int32
                      type: integer
                    vpaWeight:
                      description: VpaWeight defines the weight to be given to VPA's
                        recommendationd for the interval of number of replicas provided
                  type: object
                type: array
            required:
            - targetRef
            type: object
          status:
            description: HvpaStatus defines the observed state of Hvpa
            properties:
              hpaStatus:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file current information about the HPA.'
                properties:
                  currentReplicas:
                    format: int32
                    type: integer
                  desiredReplicas:
                    format: int32
                    type: integer
                type: object
              hvpaCurrentStatus:
                description: Current information about HVPA.
                properties:
                  hpaWeight:
                    description: VpaWeight - weight to provide to VPA scaling
                  lastScaleTime:
                    description: last time the HVPA scaled the resource; used by the
                      autoscaler to control how often the scaling is done.
                    format: date-time
                    type: string
                  lastScaleType:
                    description: the kind of scaling that was done last time
                    properties:
                      horizontal:
                        description: Scaling defines the type of scaling
                        type: string
                      vertical:
                        description: Scaling defines the type of scaling
                        type: string
                    type: object
                  overrideScaleUpStabilization:
                    description: Override scale up stabilization window
                    type: boolean
                  vpaWeight:
                    description: VpaWeight - weight to provide to VPA scaling
                type: object
              vpaStatus:
                description: Current information about the VPA.
                properties:
                  conditions:
                    description: Conditions is the set of conditions required for
                      this autoscaler to scale its target, and indicates whether or
                      not those conditions are met.
                    items:
                      description: VerticalPodAutoscalerCondition describes the state
                        of a VerticalPodAutoscaler at a certain point.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another
                          format: date-time
                          type: string
                        message:
                          description: message is a human-readable explanation containing
                            details about the transition
                          type: string
                        reason:
                          description: reason is the reason for the condition's last
                            transition.
                          type: string
                        status:
                          description: status is the status of the condition (True,
                            False, Unknown)
                          type: string
                        type:
                          description: type describes the current condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  recommendation:
                    description: The most recently computed amount of resources recommended
                      by the autoscaler for the controlled pods.
                    properties:
                      containerRecommendations:
                        description: Resources recommended by the autoscaler for each
                          container.
                        items:
                          description: RecommendedContainerResources is the recommendation
                            of resources computed by autoscaler for a specific container.
                            Respects the container resource policy if present in the
                            spec. In particular the recommendation is not produced
                            for containers with `ContainerScalingMode` set to 'Off'.
                          properties:
                            containerName:
                              description: Name of the container.
                              type: string
                            lowerBound:
                              additionalProperties:
                                type: string
                              description: Minimum recommended amount of resources.
                                Observes ContainerResourcePolicy. This amount is not
                                guaranteed to be sufficient for the application to
                                operate in a stable way, however running with less
                                resources is likely to have significant impact on
                                performance/availability.
                              type: object
                            target:
                              additionalProperties:
                                type: string
                              description: Recommended amount of resources. Observes
                                ContainerResourcePolicy.
                              type: object
                            uncappedTarget:
                              additionalProperties:
                                type: string
                              description: The most recent recommended resources target
                                computed by the autoscaler for the controlled pods,
                                based only on actual resource usage, not taking into
                                account the ContainerResourcePolicy. May differ from
                                the Recommendation if the actual resource usage causes
                                the target to violate the ContainerResourcePolicy
                                (lower than MinAllowed or higher that MaxAllowed).
                                Used only as status indication, will not affect actual
                                resource assignment.
                              type: object
                            upperBound:
                              additionalProperties:
                                type: string
                              description: Maximum recommended amount of resources.
                                Observes ContainerResourcePolicy. Any resources allocated
                                beyond this value are likely wasted. This value may
                                be larger than the maximum amount of application is
                                actually capable of consuming.
                              type: object
                          required:
                          - target
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Hvpa is the Schema for the hvpas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HvpaSpec defines the desired state of Hvpa
            properties:
              hpaTemplate:
                description: HpaTemplate defines the spec of HPA
                properties:
                  maxReplicas:
                    description: maxReplicas is the upper limit for the number of
                      replicas to which the autoscaler can scale up. It cannot be
                      less that minReplicas.
                    format: int32
                    type: integer
                  metrics:
                    description: metrics contains the specifications for which to
                      use to calculate the desired replica count (the maximum replica
                      count across all metrics will be used).  The desired replica
                      count is calculated multiplying the ratio between the target
                      value and the current value by the current number of pods.  Ergo,
                      metrics used must decrease as the pod count is increased, and
                      vice-versa.  See the individual metric source types for more
                      information about how each type of metric must respond. If not
                      set, the default metric will be set to 80% average CPU utilization.
                    items:
                      description: MetricSpec specifies how to scale based on a single
                        metric (only `type` and one other matching field should be
                        set at once).
                      properties:
                        external:
                          description: external refers to a global metric that is
                            not associated with any Kubernetes object. It allows autoscaling
                            based on information coming from components running outside
                            of cluster (for example length of queue in cloud messaging
                            service, or QPS from loadbalancer running outside of cluster).
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        object:
                          description: object refers to a metric describing a single
                            kubernetes object (for example, hits-per-second on an
                            Ingress object).
                          properties:
                            describedObject:
                              description: CrossVersionObjectReference contains enough
                                information to let you identify the referred resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent
                                  type: string
                                kind:
                                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                                  type: string
                                name:
                                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - describedObject
                          - metric
                          - target
                          type: object
                        pods:
                          description: pods refers to a metric describing each pod
                            in the current scale target (for example, transactions-processed-per-second).  The
                            values will be averaged together before being compared
                            to the target value.
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        resource:
                          description: resource refers to a resource metric (such
                            as those specified in requests and limits) known to Kubernetes
                            describing each pod in the current scale target (e.g.
                            CPU or memory). Such metrics are built in to Kubernetes,
                            and have special scaling options on top of those available
                            to normal per-pod metrics using the "pods" source.
                          properties:
                            name:
                              description: name is the name of the resource in question.
                              type: string
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  type: string
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  type: string
                              required:
                              - type
                              type: object
                          required:
                          - name
                          - target
                          type: object
                        type:
                          description: type is the type of metric source.  It should
                            be one of "Object", "Pods" or "Resource", each mapping
                            to a matching field in the object.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  minReplicas:
                    description: minReplicas is the lower limit for the number of
                      replicas to which the autoscaler can scale down. It defaults
                      to 1 pod.
                    format: int32
                    type: integer
                required:
                - maxReplicas
                type: object
              scaleDownStabilization:
                description: ScaleDownStabilization defines stabilization parameters
                  after last scaling
                properties:
                  duration:
                    description: Duration defines the minimum delay in minutes between
                      2 consecutive scale operations Valid time units are "ns", "us"
                      (or "µs"), "ms", "s", "m", "h"
                    type: string
                  minCpuChange:
                    description: MinCpuChange is the minimum change in CPU on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                  minMemChange:
                    description: MinMemChange is the minimum change in memory on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                type: object
              scaleUpStabilization:
                description: ScaleUpStabilization defines stabilization parameters
                  after last scaling
                properties:
                  duration:
                    description: Duration defines the minimum delay in minutes between
                      2 consecutive scale operations Valid time units are "ns", "us"
                      (or "µs"), "ms", "s", "m", "h"
                    type: string
                  minCpuChange:
                    description: MinCpuChange is the minimum change in CPU on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                  minMemChange:
                    description: MinMemChange is the minimum change in memory on which
                      HVPA acts HVPA uses minimum of the Value and Percentage value
                    properties:
                      percentage:
                        description: Percentage is the percentage of currently allocated
                          value to be used as threshold
                        format: int32
                        type: integer
                      value:
                        description: Value is the absolute value of the threshold
                        type: string
                    type: object
                type: object
              targetRef:
                description: TargetRef points to the controller managing the set of
                  pods for the autoscaler to control
                properties:
                  apiVersion:
                    description: API version of the referent
                    type: string
                  kind:
                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - kind
                - name
                type: object
              vpaTemplate:
                description: VpaTemplate defines the spec of VPA
                properties:
                  resourcePolicy:
                    description: Controls how the autoscaler computes recommended
                      resources. The resource policy may be used to set constraints
                      on the recommendations for individual containers. If not specified,
                      the autoscaler computes recommended resources for all containers
                      in the pod, without additional constraints.
                    properties:
                      containerPolicies:
                        description: Per-container resource policies.
                        items:
                          description: ContainerResourcePolicy controls how autoscaler
                            computes the recommended resources for a specific container.
                          properties:
                            containerName:
                              description: Name of the container or DefaultContainerResourcePolicy,
                                in which case the policy is used by the containers
                                that don't have their own policy specified.
                              type: string
                            maxAllowed:
                              additionalProperties:
                                type: string
                              description: Specifies the maximum amount of resources
                                that will be recommended for the container. The default
                                is no maximum.
                              type: object
                            minAllowed:
                              additionalProperties:
                                type: string
                              description: Specifies the minimal amount of resources
                                that will be recommended for the container. The default
                                is no minimum.
                              type: object
                            mode:
                              description: Whether autoscaler is enabled for the container.
                                The default is "Auto".
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              weightBasedScalingIntervals:
                description: WeightBasedScalingIntervals defines the intervals of
                  replica counts, and the weights for scaling a deployment vertically
                  If there are overlapping intervals, then the vpaWeight will be taken
                  from the first matching interval
                items:
                  description: WeightBasedScalingInterval defines the interval of
                    replica counts in which VpaWeight is applied to VPA scaling
                  properties:
                    lastReplicaCount:
                      description: LastReplicaCount is the number of replicas till
                        which VpaWeight is applied to VPA scaling If this field is
                        not provided, it will default to maxReplicas of HPA
                      format: int32
                      type: integer
                    startReplicaCount:
                      description: StartReplicaCount is the number of replicas from
                        which VpaWeight is applied to VPA scaling If this field is
                        not provided, it will default to minReplicas of HPA
                      format: int32
                      type: integer
                    vpaWeight:
                      description: VpaWeight defines the weight to be given to VPA's
                        recommendationd for the interval of number of replicas provided
                      format: int32
                      type: integer
                  type: object
                type: array
            required:
            - targetRef
            type: object
          status:
            description: HvpaStatus defines the observed state of Hvpa
            properties:
              hpaStatus:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file current information about the HPA.'
                properties:
                  currentReplicas:
                    format: int32
                    type: integer
                  desiredReplicas:
                    format: int32
                    type: integer
                type: object
              hvpaCurrentStatus:
                description: Current information about HVPA.
                properties:
                  hpaWeight:
                    description: VpaWeight - weight to provide to VPA scaling
                    format: int32
                    type: integer
                  lastScaleTime:
                    description: last time the HVPA scaled the resource; used by the
                      autoscaler to control how often the scaling is done.
                    format: date-time
                    type: string
                  lastScaleType:
                    description: the kind of scaling that was done last time
                    properties:
                      horizontal:
                        description: Scaling defines the type of scaling
                        type: string
                      vertical:
                        description: Scaling defines the type of scaling
                        type: string
                    type: object
                  overrideScaleUpStabilization:
                    description: Override scale up stabilization window
                    type: boolean
                  vpaWeight:
                    description: VpaWeight - weight to provide to VPA scaling
                    format: int32
                    type: integer
                type: object
              vpaStatus:
                description: Current information about the VPA.
                properties:
                  conditions:
                    description: Conditions is the set of conditions required for
                      this autoscaler to scale its target, and indicates whether or
                      not those conditions are met.
                    items:
                      description: VerticalPodAutoscalerCondition describes the state
                        of a VerticalPodAutoscaler at a certain point.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another
                          format: date-time
                          type: string
                        message:
                          description: message is a human-readable explanation containing
                            details about the transition
                          type: string
                        reason:
                          description: reason is the reason for the condition's last
                            transition.
                          type: string
                        status:
                          description: status is the status of the condition (True,
                            False, Unknown)
                          type: string
                        type:
                          description: type describes the current condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  recommendation:
                    description: The most recently computed amount of resources recommended
                      by the autoscaler for the controlled pods.
                    properties:
                      containerRecommendations:
                        description: Resources recommended by the autoscaler for each
                          container.
                        items:
                          description: RecommendedContainerResources is the recommendation
                            of resources computed by autoscaler for a specific container.
                            Respects the container resource policy if present in the
                            spec. In particular the recommendation is not produced
                            for containers with `ContainerScalingMode` set to 'Off'.
                          properties:
                            containerName:
                              description: Name of the container.
                              type: string
                            lowerBound:
                              additionalProperties:
                                type: string
                              description: Minimum recommended amount of resources.
                                Observes ContainerResourcePolicy. This amount is not
                                guaranteed to be sufficient for the application to
                                operate in a stable way, however running with less
                                resources is likely to have significant impact on
                                performance/availability.
                              type: object
                            target:
                              additionalProperties:
                                type: string
                              description: Recommended amount of resources. Observes
                                ContainerResourcePolicy.
                              type: object
                            uncappedTarget:
                              additionalProperties:
                                type: string
                              description: The most recent recommended resources target
                                computed by the autoscaler for the controlled pods,
                                based only on actual resource usage, not taking into
                                account the ContainerResourcePolicy. May differ from
                                the Recommendation if the actual resource usage causes
                                the target to violate the ContainerResourcePolicy
                                (lower than MinAllowed or higher that MaxAllowed).
                                Used only as status indication, will not affect actual
                                resource assignment.
                              type: object
                            upperBound:
                              additionalProperties:
                                type: string
                              description: Maximum recommended amount of resources.
                                Observes ContainerResourcePolicy. Any resources allocated
                                beyond this value are likely wasted. This value may
                                be larger than the maximum amount of application is
                                actually capable of consuming.
                              type: object
                          required:
                          - target
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
